---
title: Creating environment on OpenStack
---

<p class="note">Note: See <a href="init-openstack-v1.html">Initializing BOSH environment on OpenStack</a> for using bosh-init instead of CLI v2. (Not recommended)</p>

This document shows how to initialize new [environment](terminology.html#environment) on OpenStack.

## <a id="prepare-openstack"></a>Step 1: Prepare an OpenStack environment

### <a id="prerequisites"></a> Prerequisites

1. An OpenStack environment running one of the following supported releases:
    * [Liberty](http://www.openstack.org/software/liberty) (actively tested)
    * [Mitaka](http://www.openstack.org/software/mitaka) (actively tested)
    * [Newton](http://www.openstack.org/software/newton) (actively tested)

    <p class="note">Note: Juno has a <a href="https://bugs.launchpad.net/nova/+bug/1396854">bug</a> that prevents BOSH to assign specific IPs to VMs. You have to apply a Nova patch to avoid this problem.</p>

1. The following OpenStack services:
    * [Identity](http://www.openstack.org/software/openstack-shared-services/):
        BOSH authenticates credentials and retrieves the endpoint URLs for other OpenStack services.
    * [Compute](http://www.openstack.org/software/openstack-compute/):
        BOSH boots new VMs, assigns floating IPs to VMs, and creates and attaches volumes to VMs.
    * [Image](http://www.openstack.org/software/openstack-shared-services/):
        BOSH stores stemcells using the Image service.
    * **(Optional)** [OpenStack Networking](http://www.openstack.org/software/openstack-networking/):
        Provides network scaling and automated management functions that are useful when deploying complex distributed systems. **Note:** OpenStack networking is used as default as of v28 of the OpenStack CPI. To disable the use of the OpenStack Networking project, see [using nova-networking](openstack-nova-networking.html).

1. The following OpenStack networks:
    * An external network with a subnet.
    * An private network with a subnet. The subnet must have an IP address allocation pool.

1. Configuration of a new OpenStack Project
    1. Automated configuration

        You can use a [Terraform enviroment template](https://github.com/cloudfoundry-incubator/bosh-openstack-environment-templates/tree/master/bosh-init-tf) to configure your OpenStack project.

    1. Manual configuration

        <p class="note"><strong>Note</strong>: See the <a href="http://docs.openstack.org/">OpenStack documentation</a> for help finding more information.</p>

        Alternatively, you can do the following things manually as described below:
        * Create a [Keypair](#keypair).
        * Create and configure [Security Groups](#security-groups).
        * Allocate a [floating IP address](#floating-ip).

---
### <a id="keypair"></a>Create a Keypair

1. Select **Access & Security** from the left navigation panel.

1. Select the **Keypairs** tab.

    <%= image_tag("images/micro-openstack/keypair.png") %>

1. Click **Create Keypair**.

1. Name the Keypair "bosh" and click **Create Keypair**.

    <%= image_tag("images/micro-openstack/create-keypair.png") %>

1. Save the `bosh.pem` file to `~/Downloads/bosh.pem`.

    <%= image_tag("images/micro-openstack/save-keypair.png") %>

---
### <a id="security-groups"></a>Create and Configure Security Groups

You must create and configure two Security Groups to restrict incoming network traffic to the BOSH VMs.

#### BOSH Security Group

1. Select **Access & Security** from the left navigation panel.

1. Select the **Security Groups** tab.

    <%= image_tag("images/micro-openstack/security-groups.png") %>

1. Click **Create Security Group**.

1. Name the security group "bosh" and add the description "BOSH Security Group"

    <%= image_tag("images/micro-openstack/create-bosh-sg.png") %>

1. Click **Create Security Group**.

1. Select the BOSH Security Group and click **Edit Rules**.

1. Click **Add Rule**.

    <%= image_tag("images/micro-openstack/edit-bosh-sg.png") %>

1. Add the following rules to the BOSH Security Group:

    <p class="note"><strong>Note</strong>: It highly discouraged to run any production environment with <code>0.0.0.0/0</code> source or to make any BOSH management ports publicly accessible.</p>

    <table border="1" class="nice" >
      <tr>
        <th>Direction</th>
        <th>Ether Type</th>
        <th>IP Protocol</th>
        <th>Port Range</th>
        <th>Remote</th>
        <th>Purpose</th>
      </tr>

      <tr><td>Ingress</td><td>IPv4</td><td>TCP</td><td>22</td><td>0.0.0.0/0 (CIDR)</td><td>SSH access from CLI</td></tr>
      <tr><td>Ingress</td><td>IPv4</td><td>TCP</td><td>6868</td><td>0.0.0.0/0 (CIDR)</td><td>BOSH Agent access from CLI</td></tr>
      <tr><td>Ingress</td><td>IPv4</td><td>TCP</td><td>25555</td><td>0.0.0.0/0 (CIDR)</td><td>BOSH Director access from CLI</td></tr>

      <tr><td>Egress</td><td>IPv4</td><td>Any</td><td>-</td><td>0.0.0.0/0 (CIDR)</td></tr>
      <tr><td>Egress</td><td>IPv6</td><td>Any</td><td>-</td><td>::/0 (CIDR)</td></tr>

      <tr><td>Ingress</td><td>IPv4</td><td>TCP</td><td>1-65535</td><td>bosh</td><td>Management and data access</td></tr>
    </table>

---
### <a id="floating-ip"></a>Allocate a floating IP address

1. Select **Access & Security** from the left navigation panel.

1. Select the **Floating IPs** tab.

    <%= image_tag("images/micro-openstack/create-floating-ip.png") %>

1. Click **Allocate IP to Project**.

1. Select **External** from the **Pool** dropdown menu.

1. Click **Allocate IP**.

    <%= image_tag("images/micro-openstack/allocate-ip.png") %>

1. Replace `FLOATING-IP` in your deployment manifest with the allocated Floating IP Address.

    <%= image_tag("images/micro-openstack/floating-ip.png") %>

---
## <a id="deploy"></a> Step 2: Deploy

1. Install [CLI v2](./cli-v2.html).

1. Use `bosh create-env` command to deploy the Director.

    <pre class='terminal'>
    # Create directory to keep state
    $ mkdir bosh-1 && cd bosh-1

    # Clone Director templates
    $ git clone https://github.com/cloudfoundry/bosh-deployment

    # Fill below variables (replace example values) and deploy the Director
    $ DIRECTOR_NAME='bosh-1'     # arbitrary name for the director
    $ NET_INT_CIDR='10.0.0.0/24' # terraform output 'network CIDR'
    $ NET_INT_GW='10.0.0.1'      # terraform output 'network gateway IP'
    $ NET_INT_IP='10.0.0.6'      # terraform output 'director private ip'
    $ NET_INT_ID='c88c7cdc-4...' # terraform output 'network id'
    $ DEFAULT_KEY_NAME='bosh'    # terraform output 'keypair name'
    $ AZ='test'                  # To get AZs use: neutron availability-zone-list
    $ bosh create-env bosh-deployment/bosh.yml \
        --state=state.json \
        --vars-store=creds.yml \
        -o bosh-deployment/openstack/cpi.yml \
        -v director_name="$DIRECTOR_NAME" \
        -v internal_cidr="$NET_INT_CIDR" \
        -v internal_gw="$NET_INT_GW" \
        -v internal_ip="$NET_INT_IP" \
        -v auth_url="$OS_AUTH_URL" \
        -v az="$AZ" \
        -v default_key_name="$DEFAULT_KEY_NAME" \
        -v default_security_groups=[ test ] \
        -v net_id="$NET_INT_ID" \
        -v openstack_password="$OS_PASSWORD" \
        -v openstack_username="$OS_USERNAME" \
        -v openstack_domain="$OS_USER_DOMAIN_NAME" \
        -v openstack_project="$OS_PROJECT_NAME" \
        -v private_key="${PWD}/bosh.pem" \
        -v region="$OS_REGION_NAME"
    </pre>

    If running above commands outside of an OpenStack network, refer to [Exposing environment on a public IP](init-external-ip.html) for additional CLI flags.
    For the variable `external_ip` use the terraform output `allocated floating ip`.

    See [OpenStack CPI errors](openstack-cpi.html#errors) for list of common errors and resolutions.

1. Connect to the Director.

    <pre class="terminal">
    # Configure local alias
    $ bosh alias-env bosh-1 -e 10.0.0.6 --ca-cert <(bosh int ./creds.yml --path /director_ssl/ca)

    # Log in to the Director
    $ export BOSH_CLIENT=admin
    $ export BOSH_CLIENT_SECRET=`bosh int ./creds.yml --path /admin_password`

    # Query the Director for more info
    $ bosh -e bosh-1 env
    </pre>

1. Save the deployment state files left in your deployment directory `bosh-1` so you can later update/delete your Director. See [Deployment state](cli-envs.html#deployment-state) for details.

---
[Back to Table of Contents](index.html#install)

Previous: [Create an environment](init.html)
